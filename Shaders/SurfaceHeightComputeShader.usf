#include "/Engine/Private/Common.ush"
#include "CausticCommon.ush"

RWTexture2D<float4> OutputHeightTexture;
Texture2D<float4> CurDepthTexture;
Texture2D<float4> PrevDepthTexture;

[numthreads(32, 32, 1)]
void ComputeSurfaceHeight(uint3 ThreadId : SV_DispatchThreadID)
{
    float4 LiquidParam = SurfaceHeightUniform.LiquidParam;
    float AttenuationCoefficient = SurfaceHeightUniform.AttenuationCoefficient;
    float Width, Height;
    CurDepthTexture.GetDimensions(Width, Height);
    uint StepX = LiquidParam.w * Width;
    uint StepY = LiquidParam.w * Height;
    
    float CurrentHeight = LiquidParam.x * DecodeDepth(CurDepthTexture.Load(int3(ThreadId.xy, 0)));    
    float DeltaHeight = LiquidParam.z *
        (DecodeDepth(CurDepthTexture.Load(int3(ThreadId.xy + uint2(StepX, 0), 0))) +
         DecodeDepth(CurDepthTexture.Load(int3(ThreadId.xy - uint2(StepX, 0), 0))) +
         DecodeDepth(CurDepthTexture.Load(int3(ThreadId.xy + uint2(0, StepY), 0))) +
         DecodeDepth(CurDepthTexture.Load(int3(ThreadId.xy - uint2(0, StepY), 0))));
    float PreviousHeight = LiquidParam.y * DecodeDepth(PrevDepthTexture.Load(int3(ThreadId.xy, 0)));

    CurrentHeight += DeltaHeight + PreviousHeight;
    CurrentHeight *= AttenuationCoefficient;
    
    OutputHeightTexture[ThreadId.xy] = EncodeDepth(CurrentHeight);
}