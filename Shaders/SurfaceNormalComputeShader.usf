#include "/Engine/Private/Common.ush"
#include "CausticCommon.ush"

RWTexture2D<float4> OutputNormalTexture;
Texture2D<float4> InputHeightTexture;

[numthreads(32, 32, 1)]
void ComputeSurfaceNormal(uint3 ThreadId : SV_DispatchThreadID)
{
    const float StepX = 1;
    const float StepY = 1;
    float Width, Height;
    OutputNormalTexture.GetDimensions(Width, Height);
     
    float LeftHeight   = DecodeDepth(InputHeightTexture.Load(int3(ThreadId.xy - uint2(StepX, 0), 0)));
    float RightHeight  = DecodeDepth(InputHeightTexture.Load(int3(ThreadId.xy + uint2(StepX, 0), 0)));
    float BottomHeight = DecodeDepth(InputHeightTexture.Load(int3(ThreadId.xy - uint2(0, StepY), 0)));
    float TopHeight    = DecodeDepth(InputHeightTexture.Load(int3(ThreadId.xy + uint2(0, StepY), 0)));
    
    float3 Normal = normalize(float3(LeftHeight - RightHeight, BottomHeight - TopHeight, 5.0 / Width));

    OutputNormalTexture[ThreadId.xy] = float4(Normal * 0.5 + 0.5, 1.0);
}