#include "/Engine/Private/Common.ush"

// Encoding/decoding [0..1) floats into 8 bit/channel RG. Note that 1.0 will not be encoded properly.
float2 EncodeFloatRG(float Value)
{
    float2 kEncodeMul = float2(1.0, 255.0);
    float kEncodeBit = 1.0 / 255.0;
    
    float2 Enc = kEncodeMul * Value;
    Enc = frac(Enc);
    Enc.x -= Enc.y * kEncodeBit;
    return Enc;
}

float DecodeFloatRG(float2 Enc)
{
    float2 kDecodeDot = float2(1.0, 1 / 255.0);
    return dot(Enc, kDecodeDot);
}

float4 EncodeDepth(float Depth)
{
    float2 RG = EncodeFloatRG(abs(Depth));
    float B = step(0, Depth);
    
    return float4(RG, B, 1.0);
}

float DecodeDepth(float4 RGBA)
{
    float Depth = DecodeFloatRG(RGBA.rg);
    float Sign = RGBA.b > 0.5 ? 1 : -1;
    
    return Depth * Sign;
}

float step(float X, float Y)
{
    return (Y >= X) ? 1 : 0;
}