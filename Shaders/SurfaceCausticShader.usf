#include "/Engine/Private/Common.ush"
#include "CausticCommon.ush"

Texture2D<float4> InputNormalTexture;
SamplerState NormalMapSampler;

void MainVS(
    float4 InPosition : ATTRIBUTE0,
    float2 InUV : ATTRIBUTE1,
    out float2 OutUV : TEXCOORD0,
    out float4 OutPosition : SV_POSITION
)
{
    OutPosition = InPosition;
    OutUV = InUV;
}

void MainPS(
    in float2 UV : TEXCOORD0,
    out float4 OutColor : SV_Target0
)
{
    float Refraction = SurfaceCausticUniform.Refraction;
    Refraction = 1.1;
    float3 Normal = InputNormalTexture.Sample(NormalMapSampler, UV).rgb;
    float2 OldPos = UV;
    float2 NewPos = UV + Normal.xy * Refraction;
    
    float OldArea = length(ddx(OldPos)) * length(ddy(OldPos));
    float NewArea = length(ddx(NewPos)) * length(ddy(NewPos));
    float Ratio = (OldArea / NewArea) * 0.5;
    
    //Ratio = clamp(Ratio, 0.2, 1.0);
    
    OutColor = float4(Ratio, Ratio, Ratio, 1.0);

}